{"ast":null,"code":"var _jsxFileName = \"/Users/swastiksharma/Desktop/projects/movies/src/pages/layout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { AiFillLike } from 'react-icons/ai';\nimport { Link } from \"react-router-dom\";\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Layout() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [year, setYear] = useState('');\n  const [showmovies, setShowemovies] = useState(movies);\n  const [isClicked, setIsClicked] = useState(Array(10).fill(false));\n  const [movieID, setMovieID] = useState('');\n  const y = new Date().getFullYear();\n  const years = Array.from(new Array(25), (val, index) => y - index);\n  useEffect(() => {\n    getMovies(year);\n  }, []);\n  useEffect(() => {\n    getMovies(year);\n  }, [year]);\n\n  // useEffect(() => {\n  //   if(movies===undefined) return;\n\n  //   movies.forEach((item) => {\n  //     const id = uuid();\n  //     item.id=id;\n  //     setShowemovies([...movies])\n  //   })\n  // }, [movies])\n  const handleClick = index => {\n    // if(isClicked){\n    //     setlikes(likes - 1);\n    // }else{\n    //     setlikes(likes + 1);\n    // }\n    setIsClicked(isClicked.map((c, i) => {\n      if (i == index) {\n        return !c;\n      } else return c;\n    }));\n  };\n  useEffect(() => {\n    console.log(isClicked);\n    setMovies([...movies]);\n  }, [isClicked]);\n  const getByID = async movieID => {\n    try {\n      let moviesRequest;\n      if (movieID === \"\") {\n        getMovies(year);\n      } else {\n        console.log(\"hello\");\n        moviesRequest = await axios.get(`https://www.omdbapi.com/?i=${movieID}&apikey=d0108237`);\n        setMovies([moviesRequest.data]);\n      }\n      console.log(moviesRequest.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getMovies = async function () {\n    let year = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    try {\n      let moviesRequest;\n      if (search.length > 2) {\n        moviesRequest = await axios.get(`http://www.omdbapi.com/?s=${search}&y=${year}&apikey=d0108237`);\n      } else {\n        moviesRequest = await axios.get(`http://www.omdbapi.com/?s=Iron&y=${year}&apikey=d0108237`);\n      }\n      console.log(moviesRequest.data.Search);\n      setMovies(moviesRequest.data.Search);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const filterYear = e => {\n    setYear(e.target.value);\n  };\n  // useEffect(() => {\n  //   getMovies(page,year);\n  // },[page])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        background: 'black',\n        color: 'white'\n      },\n      children: \"IMDB SEARCH APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search movie here\",\n      onChange: e => {\n        setSearch(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        getMovies(year);\n      },\n      children: \" Search \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search IMDB ID\",\n      onChange: e => {\n        setMovieID(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        getByID(movieID);\n      },\n      children: \" Search \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: filterYear,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        hidden: true,\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), years.map((year, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, `year${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: movies == undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Movies not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) : movies.length > 0 ? movies.map((movie, i) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/${movie.imdbID}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.Poster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movie.Title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleClick(i),\n                children: [/*#__PURE__*/_jsxDEV(AiFillLike, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 81\n                }, this), isClicked[i] ? 'Unlike' : 'Like']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true);\n      }) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_s(Layout, \"XY4hQ13sWNiX1T9cA3BmLm4lvAY=\");\n_c = Layout;\n{/* </div>ReactDOM.render(<App/>, document.getElementById('root')); */}\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","axios","AiFillLike","Link","Layout","movies","setMovies","search","setSearch","year","setYear","showmovies","setShowemovies","isClicked","setIsClicked","Array","fill","movieID","setMovieID","y","Date","getFullYear","years","from","val","index","getMovies","handleClick","map","c","i","console","log","getByID","moviesRequest","get","data","error","length","Search","filterYear","e","target","value","display","justifyContent","background","color","undefined","movie","imdbID","Poster","alignItems","Title"],"sources":["/Users/swastiksharma/Desktop/projects/movies/src/pages/layout.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { AiFillLike } from 'react-icons/ai';\nimport { Link } from \"react-router-dom\";\nimport '../index.css'\n\nexport default function Layout() {\n    const [movies, setMovies] = useState([]);\n    const [search, setSearch] = useState('');\n    const [year, setYear] = useState('');\n    const [showmovies, setShowemovies] = useState(movies);\n    const [isClicked, setIsClicked] = useState(Array(10).fill(false));\n    const [movieID,setMovieID] = useState('');\n\n\n    const y = (new Date()).getFullYear();\n    const years = Array.from(new Array(25), (val, index) => y - index);\n\n    useEffect(() => {\n        getMovies(year);\n    }, [])\n\n    useEffect(() => {\n        getMovies(year);\n    }, [year])\n\n    // useEffect(() => {\n    //   if(movies===undefined) return;\n\n    //   movies.forEach((item) => {\n    //     const id = uuid();\n    //     item.id=id;\n    //     setShowemovies([...movies])\n    //   })\n    // }, [movies])\n    const handleClick = (index) => {\n        // if(isClicked){\n        //     setlikes(likes - 1);\n        // }else{\n        //     setlikes(likes + 1);\n        // }\n        setIsClicked(isClicked.map((c, i) => {\n            if (i == index) {\n                return !c;\n            }\n            else return c;\n        }));\n    }\n\n    useEffect(() => {\n        console.log(isClicked);\n        setMovies([...movies])\n    }, [isClicked])\n\n\n    const getByID = async (movieID) => {\n        try {\n            let moviesRequest;\n            if(movieID===\"\"){\n                getMovies(year)\n            } else {\n                console.log(\"hello\");\n                moviesRequest = await axios.get(`https://www.omdbapi.com/?i=${movieID}&apikey=d0108237`)\n                setMovies([moviesRequest.data])\n            }\n            console.log(moviesRequest.data)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const getMovies = async (year = '') => {\n        try {\n            let moviesRequest;\n            if (search.length > 2) {\n                moviesRequest = await axios.get(\n                    `http://www.omdbapi.com/?s=${search}&y=${year}&apikey=d0108237`\n                )\n            }\n            else {\n                moviesRequest = await axios.get(\n                    `http://www.omdbapi.com/?s=Iron&y=${year}&apikey=d0108237`\n                )\n            }\n            console.log(moviesRequest.data.Search)\n            setMovies(moviesRequest.data.Search)\n        }\n        catch (error) {\n            console.log(error)\n        }\n    }\n\n    const filterYear = (e) => {\n        setYear(e.target.value)\n    }\n    // useEffect(() => {\n    //   getMovies(page,year);\n    // },[page])\n\n\n\n    return (\n        <div class>\n            <h1 style={{ display: 'flex', justifyContent: 'center', background: 'black', color: 'white' }}>IMDB SEARCH APP</h1>\n            <input type=\"text\" placeholder=\"Search movie here\" onChange={(e) => { setSearch(e.target.value) }} />\n            {/* <button onClick={(() => {getMovies(search)})}> Search </button> */}\n            <button onClick={(() => { getMovies(year) })}> Search </button>\n            \n            <input type=\"text\" placeholder=\"Search IMDB ID\" onChange={(e) => { setMovieID(e.target.value) }} />\n            {/* <button onClick={(() => {getMovies(search)})}> Search </button> */}\n            <button onClick={(() => { getByID(movieID) })}> Search </button>\n\n            <select onChange={filterYear}>\n                <option value=\"\" hidden >Year</option>\n                {\n                    years.map((year, index) => {\n                        return <option key={`year${index}`} value={year}>{year}</option>\n                    })\n                }\n            </select>\n\n            <div className=\"movies-container\">\n                {movies == undefined ? (\n                    <div> Movies not found</div>\n                ) :\n                    movies.length > 0 ? movies.map((movie, i) => {\n                        return (\n                            <>\n                                <Link to={`/${movie.imdbID}`}>\n                                    <img src={movie.Poster} />\n                                </Link>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <div><p>{movie.Title}</p></div>\n                                    <div><button onClick={() => handleClick(i)}><AiFillLike />{isClicked[i] ? 'Unlike' : 'Like'}</button></div>\n                                </div>\n                            </>\n                        )\n                    }) : ''\n                }\n            </div>\n        </div>\n    )\n}\n\n{/* </div>ReactDOM.render(<App/>, document.getElementById('root')); */ }\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}